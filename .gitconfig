[core]
  excludesfile = ~/.gitignore_global
[user]
  name = Motoi Okuzono
  email = motoi.okuzono+github@gmail.com
[gpg]
	program = /opt/homebrew/bin/gpg
[commit]
	gpgsign = true
[pull]
  rebase = true
[ghq]
  root = ~/ghq
[alias]
  c = commit
  cm = commit -m
  cf = commit --fixup
  co = checkout
  cob = checkout -b
  cp = cherry-pick
  r = rebase
  s = status -s
  wip = commit -a -m wip
  unwip = reset @~1
  unstage = reset HEAD
  current = rev-parse --short HEAD
  refresh="!f() { git remote | grep -q upstream && remote=upstream || remote=origin; branch=`git rev-parse --abbrev-ref HEAD`; default_branch=`git remote show $remote | grep 'HEAD branch' | awk '{print $NF}'`; git checkout $default_branch; git fetch $remote $default_branch; git rebase $remote/$default_branch; git checkout $branch; git rebase $default_branch; }; f"
  fixup="!f() { git add -A; git commit --fixup=HEAD^; git rebase -i --autosquash HEAD^^; }; f"
  opr="!f() { org=$(git remote get-url origin | sed -E 's/^.*[:\\/]{1,2}([^\\/]+)\\/[^\\/]+$/\\1/'); branch=$(git rev-parse --abbrev-ref HEAD); if git remote | grep -q 'upstream'; then target=$org:$branch; else target=$branch; fi; gh pr view --web $target || gh pr create -w; }; f"
[include]
  path = ~/.gitconfig_local
[init]
	defaultBranch = main
